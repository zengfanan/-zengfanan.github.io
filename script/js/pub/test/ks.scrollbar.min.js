!function (a) {
	"function" == typeof define ? define(a) : a("", window.ue = window.ue || {}, "")
}
(function (a, b, c) {
	function d(a) {
		var b = 0,
		c = 0;
		return "touchstart" == a.type || "touchend" == a.type || "touchmove" == a.type ? (c = a.originalEvent.changedTouches[0].clientX, b = a.originalEvent.changedTouches[0].clientY) : a.pageY ? (b = a.pageY, c = a.pageX) : a.clientY && (b = a.clientY + document.body.scrollTop || document.documentElement.scrollTop, c = a.clientX + document.body.scrollLeft || document.documentElement.scrollLeft), {
			x : c,
			y : b
		}
	}
	function e(a) {
		var b = 0,
		c = 0,
		d = 0;
		return a.wheelDelta && (b = a.wheelDelta / 120),
		a.detail && (b = -a.detail / 3),
		d = b,
		void 0 !== a.axis && a.axis === a.HORIZONTAL_AXIS && (d = 0, c = -1 * b),
		void 0 !== a.wheelDeltaY && (d = a.wheelDeltaY / 120),
		void 0 !== a.wheelDeltaX && (c = -1 * a.wheelDeltaX / 120), {
			delta : b,
			deltaX : c,
			deltaY : d
		}
	}
	function f(a) {
		if (this.constructor !== f)
			return new f(a);
		var b = {
			height : 0,
			scroll_per : 20,
			min_scroll_size : 30,
			scrollbarbg : $(),
			target : $(),
			box : $(),
			scrollbar : $(),
			btn : $(),
			onscroll : function () {},
			btn_prev : $(),
			btn_next : $()
		};
		if (this.options = a = $.extend(b, a), "number" == typeof a.height && a.height > 0)
			this.type = 1, this.size = a.height;
		else {
			if (!("number" == typeof a.width && a.width > 0))
				return;
			this.type = 0,
			this.size = a.width
		}
		this.lastMousePos = 0,
		this.lastElemOffset = 0,
		this.btn_pos = 0,
		this.box_scroll_pos = 0,
		this.init()
	}
	f.prototype = {
		constructor : f,
		init : function () {
			var a = this,
			b = this.options;
			this.reset(),
			b.btn.unbind("mousedown.scrollbar touchstart.scrollbar").bind("mousedown.scrollbar touchstart.scrollbar", function (b) {
				return a.isMouseDown = !0,
				1 == a.type ? (a.lastMousePos = d(b).y, a.lastElemOffset = this.offsetTop || 0) : (a.lastMousePos = d(b).x, a.lastElemOffset = this.offsetLeft || 0),
				a.updatePosition(b),
				document.body.onselectstart = function () {
					return !1
				},
				!1
			}),
			b.scrollbarbg.unbind("click.scrollbar").bind("click.scrollbar", function (b) {
				var c = a.type ? b.offsetY : b.offsetX,
				d = c / a.scrollbar_size,
				e = d * a.real_box_size;
				a.boxScrollTo(e, !0)
			}),
			b.btn_prev.attr("data-direction", "prev"),
			b.btn_next.attr("data-direction", "next"),
			b.btn_prev.add(b.btn_next).unbind("click.scrollbar").bind("click.scrollbar", function (b) {
				var c = "prev" === $(this).attr("data-direction") ? -1 : 1,
				d = a.box_scroll_pos + c * a.scroll_per;
				d > a.real_box_size && (d = a.real_box_size),
				0 > d && (d = 0),
				a.boxScrollTo(d, !0, 0, !0, !0),
				b.preventDefault()
			}),
			$([window, document.body]).bind("mouseup.scrollbar touchend.scrollbar", function () {
				return a.isMouseDown ? (a.isMouseDown = !1, document.body.onselectstart = function () {
					return !0
				}, !1) : void 0
			}).bind("mousemove.scrollbar touchmove.scrollbar", function (b) {
				return a.isMouseDown ? (a.updatePosition(b), !1) : void 0
			}),
			this.last_wheel_time = new Date,
			1 == this.type && b.target.unbind("mousewheel.scrollbar DOMMouseScroll.scrollbar").bind("mousewheel.scrollbar DOMMouseScroll.scrollbar", function (b) {
				var c = e(b.originalEvent || b),
				d = a.box_scroll_pos - c.delta * a.scroll_per;
				return 0 == a.box_scroll_pos && 1 == c.delta || (a.box_scroll_pos == a.real_box_size || a.real_box_size <= 0) && -1 == c.delta ? !0 : (d > a.real_box_size && (d = a.real_box_size), 0 > d && (d = 0), b.preventDefault(), b.stopPropagation(), new Date - a.last_wheel_time < 200 ? !1 : (a.last_wheel_time = new Date, void a.boxScrollTo(d, !0)))
			})
		},
		reset : function (a, b) {
			var c = this,
			a = a === !0 ? !0 : !1,
			b = b || 100,
			d = this.options;
			if (1 == this.type ? (d.scrollbar.height(d.scrollbar_height || d.height), this.btn_prev_size = d.btn_prev.height() || 0, this.btn_next_size = d.btn_next.height() || 0, this.box_size = d.box.outerHeight(), this.real_box_size = this.box_size - this.size, this.scrollbar_size = d.scrollbar.height(), this.btn_border_top = parseInt(d.btn.css("border-top") || d.btn.css("border-top-width")) || 0, this.btn_border_bottom = parseInt(d.btn.css("border-bottom") || d.btn.css("border-bottom-width")) || 0, this.scroll_size = this.scrollbar_size - this.btn_border_top - this.btn_border_bottom - this.btn_next_size) : (d.scrollbar.width(d.scrollbar_width || d.width), this.btn_prev_size = d.btn_prev.width() || 0, this.btn_next_size = d.btn_next.width() || 0, this.box_size = d.box.outerWidth(), this.real_box_size = this.box_size - this.size, this.scrollbar_size = d.scrollbar.width(), this.btn_border_left = parseInt(d.btn.css("border-left") || d.btn.css("border-left-width")) || 0, this.btn_border_right = parseInt(d.btn.css("border-right") || d.btn.css("border-right-width")) || 0, this.scroll_size = this.scrollbar_size - this.btn_border_left - this.btn_border_right - this.btn_next_size), this.btn_size = this.size / this.box_size * this.scroll_size, this.btn_size < d.min_scroll_size && (this.btn_size = d.min_scroll_size), this.remain_size = (this.options.available_scroll_size || this.scroll_size) - this.btn_size, this.scroll_per = d.scroll_per, this.box_size > this.size)
				if (d.scrollbar.show(), 1 == this.type) {
					a ? d.btn.animate({
						height : this.btn_size
					}, b) : d.btn.css({
						height : this.btn_size,
						zoom : 1
					});
					var e = Math.abs(parseInt(d.box.css("margin-top")));
					e = isNaN(e) ? 0 : e,
					c.boxScrollTo(e, a, b, !0)
				} else
					a ? d.btn.animate({
						width : this.btn_size
					}, b) : d.btn.css({
						width : this.btn_size,
						zoom : 1
					}), this.boxScrollTo(Math.abs(parseInt(d.box.css("margin-left"))), a, b, !0);
			else
				d.scrollbar.hide(), c.boxScrollTo(0, !1, 200, !0)
		},
		boxScrollTo : function (a, b, c, d, e, f) {
			var g = this,
			b = b === !1 ? !1 : !0,
			d = d === !0 ? !0 : !1,
			e = e === !0 ? !0 : !1,
			c = c || 200,
			f = "function" == typeof f ? f : function () {},
			h = this.options,
			i = !0;
			a > g.real_box_size && (a = g.real_box_size),
			(0 > a || isNaN(a)) && (a = 0),
			(0 == a || a == g.real_box_size) && (i = !1);
			var j = Math.round(a / g.real_box_size * g.remain_size);
			return j = isNaN(j) ? 0 : j,
			this.btn_pos = j,
			j < g.btn_prev_size && (j = g.btn_prev_size),
			this.box_scroll_pos = a,
			a = -a,
			1 == this.type ? b ? (e && (h.btn.stop(), h.box.stop()), h.btn.animate({
					top : j
				}, c, function () {
					!d && h.onscroll.call(g)
				}), h.box.animate({
					"margin-top" : a
				}, c, f)) : (h.btn.css({
					top : j
				}), h.box.css({
					"margin-top" : a
				}), !d && h.onscroll.call(g)) : b ? (e && (h.btn.stop(), h.box.stop()), h.btn.animate({
					left : j
				}, c, function () {
					!d && h.onscroll.call(g)
				}), h.box.animate({
					"margin-left" : a
				}, c, f)) : (h.btn.css({
					left : j
				}), h.box.css({
					"margin-left" : a
				}), !d && h.onscroll.call(g)),
			i
		},
		scrollTo : function (a, b, c, d, e, f) { {
				var g,
				h = this,
				b = b === !1 ? !1 : !0,
				d = d === !0 ? !0 : !1,
				e = e === !0 ? !0 : !1,
				c = c || 200;
				this.options
			}
			/([0-9.]+)%/.test(a) && (a = h.remain_size * RegExp.$1 / 100),
			a > h.remain_size && (a = h.remain_size),
			a < h.btn_prev_size && (a = h.btn_prev_size),
			h.btn_pos = Math.round(a),
			g = Math.round(a / h.remain_size * h.real_box_size),
			h.boxScrollTo(g, b, c, d, e, f)
		},
		updatePosition : function (a) {
			var b,
			c = this,
			e = (this.options, this.type ? d(a).y : d(a).x),
			f = e - c.lastMousePos;
			b = c.lastElemOffset + f,
			c.scrollTo(b, !1, 200, !1, !1)
		}
	},
	"[object Object]" == {}

	.toString.call(c) ? c.exports = f : b.scrollbar = f
});
